{"version":3,"sources":["components/Uploader.js","view/Home.js"],"names":["Dragger","Upload","ImgWrapper","styled","div","Uploader","observer","useStores","ImageStore","UserStore","console","log","serverFile","props","showUploadList","beforeUpload","file","test","type","size","setFile","setFileName","name","upload","then","message","success","catch","warning","className","InboxOutlined","href","attributes","url","fileName","src","alt","Wrapper","Home","currentUser","username"],"mappings":"+jBAOOA,EAAWC,IAAXD,QAGDE,EAAaC,IAAOC,IAAV,KA8EDC,EA5DEC,aAAS,WAAO,IAAD,EAEIC,cAAdC,GAFU,EAErBC,UAFqB,EAEVD,YAClBE,QAAQC,IAAIH,EAAWI,YACvB,IAAMC,EAAQ,CACVC,gBAAgB,EAChBC,aAAc,SAAAC,GAKV,GADAN,QAAQC,IAAIK,GACP,wCAAwCC,KAAKD,EAAKE,MAAvD,CAIA,KAAIF,EAAKG,KAAO,SAahB,OATAX,EAAWY,QAAQJ,GACnBR,EAAWa,YAAYL,EAAKM,MAC5Bd,EAAWe,SACNC,MAAK,WACFC,IAAQC,QAAQ,+BAEnBC,OAAM,WACHF,IAAQG,QAAQ,gCAEjB,EAZHH,IAAQG,QAAQ,iEAJhBH,IAAQG,QAAQ,gFAmB5B,OACI,oCACI,kBAAC5B,EAAYa,EACT,uBAAGgB,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,gEACA,uBAAGA,UAAU,mBAAb,yGAIHrB,EAAWI,WACR,kBAACV,EAAD,KACI,wDACA,yBAAK2B,UAAU,SAAf,4BACI,uBACIE,KAAMvB,EAAWI,WAAWoB,WAAWC,IAAID,WAAWC,KAD1D,IACiEzB,EAAWI,WAAWoB,WAAWC,IAAID,WAAWC,MAGrH,yBAAKJ,UAAU,SAAf,2BAA4BrB,EAAWI,WAAWoB,WAAWE,SAA7D,KACA,yBAAKL,UAAU,SAAf,mCACA,yBAAKA,UAAU,SAAQ,yBAAKM,IAAK3B,EAAWI,WAAWoB,WAAWC,IAAID,WAAWC,IAAKG,IAAI,qCAG5F,S,mLC9ElB,IAAMC,EAAQlC,IAAOC,IAAR,KAUPkC,EAAOhC,aAAS,WAAM,IACjBG,EAAWF,cAAXE,UACP,OACI,kBAAC4B,EAAD,KAGS5B,GAAaA,EAAU8B,YACpB,yBAAMV,UAAU,QAAQpB,EAAU8B,YAAYP,WAAWQ,SAAzD,4DACA,yBAAKX,UAAU,QAAf,iDAER,kBAAC,EAAD,UAIGS","file":"static/js/9.9d4dcd8d.chunk.js","sourcesContent":["import React, {useRef} from \"react\"\r\nimport styled from \"styled-components\"\r\nimport useStores from \"../store\"\r\nimport {observer} from \"mobx-react\"\r\nimport {Upload, message} from 'antd';\r\nimport {InboxOutlined} from '@ant-design/icons';\r\n\r\nconst {Dragger} = Upload;\r\n\r\n\r\nconst ImgWrapper = styled.div`\r\n    width: 100%;\r\n    border: #ddd dashed 1px;\r\n    margin-top: 20px;\r\n    padding: 10px;\r\n    background: #fff;\r\n        h3{text-align: center}\r\n.title{padding:8px}\r\n    img{\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        padding: 5px;\r\n        width:150px;\r\n        height: auto;\r\n    }\r\n`;\r\n\r\n\r\nconst Uploader = observer(() => {\r\n\r\n    const {UserStore, ImageStore} = useStores()\r\n    console.log(ImageStore.serverFile)\r\n    const props = {\r\n        showUploadList: false,\r\n        beforeUpload: file => {\r\n            // if(UserStore.currentUser===null) {\r\n            //     message.warning('请先登录再上传')\r\n            // }\r\n            console.log(file)\r\n            if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\r\n                message.warning('只能上传png,svg,jpg,jpeg,gif类型的文件')\r\n                return\r\n            }\r\n            if (file.size > 1024 * 1024) {\r\n                message.warning('最大只能上传1M的图片')\r\n                return\r\n            }\r\n            ImageStore.setFile(file)\r\n            ImageStore.setFileName(file.name)\r\n            ImageStore.upload()\r\n                .then(() => {\r\n                    message.success('上传成功')\r\n                })\r\n                .catch(() => {\r\n                    message.warning(\"上传失败\")\r\n                })\r\n            return false\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Dragger {...props} >\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined/>\r\n                </p>\r\n                <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    仅支持png/gif/jpg/jpeg/svg格式的图片，图片最大1M\r\n                </p>\r\n            </Dragger>\r\n            {ImageStore.serverFile ?\r\n                <ImgWrapper>\r\n                    <h3>上传结果</h3>\r\n                    <div className=\"title\">在线地址:\r\n                        <a\r\n                            href={ImageStore.serverFile.attributes.url.attributes.url}> {ImageStore.serverFile.attributes.url.attributes.url}\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"title\">文件名：{ImageStore.serverFile.attributes.fileName} </div>\r\n                    <div className=\"title\"> 图片预览：</div>\r\n                    <div className=\"title\"><img src={ImageStore.serverFile.attributes.url.attributes.url} alt='上传的图片'/>\r\n                    </div>\r\n                </ImgWrapper>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default Uploader","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {observer} from \"mobx-react\"\r\nimport useStores from \"../store\"\r\nimport Uploader from \"../components/Uploader\"\r\nconst Wrapper=styled.div`\r\npadding: 20px 80px;\r\n.note{\r\nbackground: orange;\r\npadding: 10px ;\r\ncolor: #fff;\r\nmargin-bottom: 30px;\r\n}\r\n\r\n`;\r\nconst Home = observer(() =>{\r\n    const {UserStore}=useStores()\r\n    return(\r\n        <Wrapper>\r\n\r\n            {\r\n                (UserStore && UserStore.currentUser) ?\r\n                    <div  className='note'>{UserStore.currentUser.attributes.username},要不要上传些图片呢?</div>:\r\n                    <div className='note'>请先登录再上传!!!</div>\r\n            }\r\n            <Uploader></Uploader>\r\n         </Wrapper>\r\n    )\r\n})\r\nexport default Home;"],"sourceRoot":""}